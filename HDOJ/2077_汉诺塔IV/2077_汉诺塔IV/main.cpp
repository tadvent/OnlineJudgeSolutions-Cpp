// 分析:
// 题目要求不能直接从第1到第3个柱子
// 分析第 n 种情况时：
//     只有最大的一个盘子有特殊权，其他盘子还按原来的规则。所以不能直接对结果 dp，而要先对一般规则 dp，再将之稍加改动用于第 n 种情况
//     第 n 种情况的移动顺序是
//       [1 ~ n-1] : 1 -> 2       (普通规则)      a[n-1]
//              n  : 1 -> 2 -> 3                   2
//       [1 ~ n-1] : 2 -> 3       (普通规则)      a[n-1]
// 假设按普通规则将 n 个盘子从 1 移到 2 需要次数为 a[n]，按特殊规则将 n 个盘子从 1 移到 3 需要次数为 b[n]
// 则由上面的步骤可知 a 与 b 的关系是：b[n] = 2a[n-1] + 2    ........... (1)

// 下面再考虑 a[n] 与 a[n-1] 的关系：
//     将 n 个盘子按普通规则从 1 移到 2 的顺序是：
//        [1 ~ n-1] : 1 -> 2 -> 3        2a[n-1]
//               n  : 1 -> 2             1
//        [1 ~ n-1] : 3 -> 2             a[n-1]
//     可知递推关系为 a[n] = 3a[n-1] + 1    .............................. (2)

// (1) (2) 式联立消去 a，可得 b[n] 与 b[n-1] 的递推关系：
//     b[n] = 3b[n-1] - 2

#include<iostream>
using namespace std;

int main(){
    int t, n;
    int b[21] = {0, 2};

    for(int i=2; i<21; ++i)
        b[i] = 3*b[i-1] - 2;

    cin>>t;
    while(t--){
        cin>>n;
        cout<<b[n]<<'\n';
    }
}
